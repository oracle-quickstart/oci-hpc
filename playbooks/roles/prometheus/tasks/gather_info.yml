- name: Gather serial number
  command: "sudo dmidecode -s system-serial-number"
  register: serial_output
  delegate_to: "{{ item }}"

- name: Gather FSS IP
  shell: "cat /etc/fstab | grep {{nfs_source_path}}"
  register: nfs_output
  delegate_to: "{{ item }}"
  ignore_errors: yes

- name: Extract the IP address using regex
  set_fact:
    ip_address: "{{ nfs_output.stdout | regex_search('([0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3})') }}"
  when: nfs_output.rc == 0

- name: Extract the IP address using regex
  set_fact:
    ip_address: "None"
  when: nfs_output.rc != 0

- name: gather metadata
  uri:
    url: http://169.254.169.254/opc/v2/instance/
    method: GET
    headers:
      Authorization: 'Bearer Oracle'
    return_content: yes
  register: i_metadata
  delegate_to: "{{ item }}"

- name: set fact
  set_fact:
    instance_metadata: "{{ i_metadata['content'] }}"

- name: make sure freeformTags in included
  set_fact:
    instance_metadata: "{{ instance_metadata | combine({'freeformTags': {'cluster_name':''}}) }}"
  when: "not 'freeformTags' in instance_metadata"
  
- name: make sure cluster_name in included
  set_fact:
    cluster_name: "{{ instance_metadata['displayName'].split('-') | slice(2, 10) | join('-') }}"
  when: "not 'cluster_name' in instance_metadata['freeformTags']"

- name: make sure cluster_name in included
  set_fact:
    cluster_name: "{{instance_metadata['freeformTags']['cluster_name']}}"
  when: "'cluster_name' in instance_metadata['freeformTags']"

- name: gather RDMA metadata
  uri:
    url: http://169.254.169.254/opc/v1/host/
    method: GET
    headers:
      Authorization: 'Bearer Oracle'
    return_content: yes
  register: h_metadata
  delegate_to: "{{ item }}"

- name: set fact
  set_fact:
    rdma_metadata: "{{ h_metadata['content'] }}"

- name: add empty networkblockID
  set_fact:
    rdma_metadata : "{{ rdma_metadata | combine({'networkBlockId': 'None'}) }}"
  when: "not 'networkBlockId' in rdma_metadata"

- name: add empty rdmaTopologyData
  set_fact:
    rdma_metadata : "{{ rdma_metadata | combine({'rdmaTopologyData': {'customerHPCIslandId': 'None','customerLocalBlock': 'None','customerNetworkBlock': 'None'}}) }}"
  when: "not 'rdmaTopologyData' in rdma_metadata"

- name: Build the host_info dictionary
  set_fact:
    host_info: "{{ host_info | default({}) | combine({item: {'serial_number': serial_output.stdout, 'cluster_name': cluster_name, 'shape': instance_metadata['shape'] , 'ocid': instance_metadata['id'] , 'oci_name': instance_metadata['displayName'], 'availabilityDomain': instance_metadata['availabilityDomain'],'compartmentId': instance_metadata['compartmentId'],'rackID': rdma_metadata['rackId'],'networkBlockId': rdma_metadata['networkBlockId'],'rail_id': rdma_metadata['rdmaTopologyData']['customerLocalBlock'],'fss_ip': ip_address,'hpc_island': rdma_metadata['rdmaTopologyData']['customerHPCIslandId'] }})   }}"