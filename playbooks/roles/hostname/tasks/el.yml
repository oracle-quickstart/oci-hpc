---
- name: update hostname for HPC cluster
  vars:
    - index: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] | ansible.netcommon.ipsubnet(hostvars[inventory_hostname]['private_subnet']) }}"
    - keyword: "{% for partition in queues %}{% for instance in partition.instance_types %}{% if instance.name == instance_type %}{{instance.instance_keyword}}{% endif %}{% endfor %}{% endfor %}"
  hostname:
    name: "{{queue}}-{{keyword}}-node-{{index}}"
  when: ('compute' in group_names )

- name: Check Hostname
  vars:
    - index: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] | ansible.netcommon.ipsubnet(hostvars[inventory_hostname]['private_subnet']) }}"
    - keyword: "{% for partition in queues %}{% for instance in partition.instance_types %}{% if instance.name == instance_type %}{{instance.instance_keyword}}{% endif %}{% endfor %}{% endfor %}"
  shell:
    cmd: "hostname"
  register: hostname_output
  when: ('compute' in group_names )

- name: update hostname for HPC cluster
  vars:
    - index: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] | ansible.netcommon.ipsubnet(hostvars[inventory_hostname]['private_subnet']) }}"
    - keyword: "{% for partition in queues %}{% for instance in partition.instance_types %}{% if instance.name == instance_type %}{{instance.instance_keyword}}{% endif %}{% endfor %}{% endfor %}"
  hostname:
    name: "{{queue}}-{{keyword}}-node-{{index}}"
  when:  ('compute' in group_names ) and ( hostname_output.stdout != ansible_fqdn.split('.')[0] )
