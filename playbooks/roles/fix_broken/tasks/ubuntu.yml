---

- name: Ensure apt process is completed
  become: true
  shell: |
    apt_process=`ps aux | grep "apt update" | grep -v grep | wc -l`
    apt_process=$(( apt_process -1 ))
    while [ $apt_process -ge 1 ]
      do
        echo "wait until apt update is done"
        sleep 10s
        ps aux | grep "apt update" | grep -v grep
        apt_process=`ps aux | grep "apt update" | grep -v grep | wc -l`
        apt_process=$(( apt_process -1 ))
      done
    sleep 10s

- name: Ensure unattended upgrades are disabled
  become: true
  replace:
    path: /etc/apt/apt.conf.d/20auto-upgrades
    regexp: '1'
    replace: '0'

- name: remove unattended-upgrades
  systemd: 
    name: unattended-upgrades
    state: stopped
    enabled: no 

- name: Purge unattended-upgrades
  apt:
    name: unattended-upgrades
    purge: yes
    state: absent

- name: stop and mask timers
  systemd: 
    name: "{{item}}"
    state: stopped
    enabled: no 
    masked: yes
  with_items: 
    - apt-daily-upgrade.timer
    - apt-daily.timer

- name: Mark packages
  become: true
  dpkg_selections:
    name: "{{item}}"
    selection: hold
  with_items:
    - linux-oracle 
    - linux-headers-oracle 
    - linux-image-oracle

- name: Check again whether apt process is completed
  become: true
  shell: |
    apt_process=`ps aux | grep "apt update" | grep -v grep | wc -l`
    apt_process=$(( apt_process -1 ))
    while [ $apt_process -ge 1 ]
      do
        echo "wait until apt update is done"
        sleep 10s
        ps aux | grep "apt update" | grep -v grep
        apt_process=`ps aux | grep "apt update" | grep -v grep | wc -l`
        apt_process=$(( apt_process -1 ))
      done
    sleep 10s


- name: Run apt-get update
  become: true
  shell: |
    sudo apt-get update &
    PID1=$!
    wait $PID1


- name: Run fix-broken
  become: true
  shell: |
    sudo apt -y --fix-broken install &
    PID1=$!
    wait $PID1
