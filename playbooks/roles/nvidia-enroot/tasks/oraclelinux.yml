---
- block:
  - name: install required packages
    vars: 
      package_name: 
        - zstd
        - "https://github.com/NVIDIA/enroot/releases/download/v3.4.0/enroot-3.4.0-2.el7.{{ ansible_architecture }}.rpm"
        - "https://github.com/NVIDIA/enroot/releases/download/v3.4.0/enroot+caps-3.4.0-2.el7.{{ ansible_architecture }}.rpm"
      package_repo: "epel,ol7_developer_EPEL"
    include_role: 
      name: safe_yum
    when: ansible_distribution_major_version == '7'
    
  - name: install required packages
    vars: 
      package_name: 
        - zstd
        - "https://github.com/NVIDIA/enroot/releases/download/v3.4.1/enroot-3.4.1-1.el8.{{ ansible_architecture }}.rpm"
        - "https://github.com/NVIDIA/enroot/releases/download/v3.4.1/enroot+caps-3.4.1-1.el8.{{ ansible_architecture }}.rpm"
      package_repo: "ol8_developer_EPEL"
      disable_gpg_check_var: True
    include_role: 
      name: safe_yum
    when: ansible_distribution_major_version == '8'

  # needs reboot
  - name: update namespace.unpriv_enable=1 kernel parameters 
    command: bash -c "sudo grubby --args="namespace.unpriv_enable=1" --update-kernel=`sudo grubby --default-kernel`"
  - name: update user_namespace.enable=1 kernel parameters 
    command: bash -c "sudo grubby --args="user_namespace.enable=1" --update-kernel=`sudo grubby --default-kernel`"

  - name: set user.max_user_namespaces using sysctl
    ansible.posix.sysctl:
      name: user.max_user_namespaces
      value: '15076'
      sysctl_file: /etc/sysctl.d/81-enroot.conf
      reload: yes


  - name: Download enroot-check
    get_url:
      url: "https://github.com/NVIDIA/enroot/releases/download/v3.4.0/enroot-check_3.4.0_{{ ansible_architecture }}.run"
      dest: "/tmp"
      mode: '0755'
      owner: opc
      group: opc
    when: ansible_distribution_major_version == '7'

  - name: Download enroot-check
    get_url:
      url: "https://github.com/NVIDIA/enroot/releases/download/v3.4.1/enroot-check_3.4.1_{{ ansible_architecture }}.run"
      dest: "/tmp"
      mode: '0755'
      owner: opc
      group: opc
    when: ansible_distribution_major_version == '8'

  - name: execute enroot-check_*.run
    command: bash -c "/tmp/enroot-check_*.run --verify"

  - name: 
    set_fact: 
      - enroot_top_path_checked: "/etc/enroot/"
    when: " not 'nvme0n1' in hostvars[inventory_hostname].ansible_devices"

  - name: 
    set_fact: 
      - enroot_top_path_checked: "{{enroot_top_path}}"
    when: "'nvme0n1' in hostvars[inventory_hostname].ansible_devices"  

  - name: update ENROOT_RUNTIME_PATH
    lineinfile: 
      dest: /etc/enroot/enroot.conf
      state: present
      regexp: '^#ENROOT_RUNTIME_PATH.*'
      line: 'ENROOT_RUNTIME_PATH        {{enroot_top_path_checked}}/enroot_runtime/user-$(id -u)'
      backup: yes

  - name: update ENROOT_DATA_PATH
    lineinfile: 
      dest: /etc/enroot/enroot.conf
      state: present
      regexp: '^#ENROOT_DATA_PATH.*'
      line: 'ENROOT_DATA_PATH        {{enroot_top_path_checked}}/enroot_data/user-$(id -u)'
      backup: yes

  - name: update ENROOT_CACHE_PATH
    lineinfile:
      dest: /etc/enroot/enroot.conf
      state: present
      regexp: '^#ENROOT_CACHE_PATH.*'
      line: 'ENROOT_CACHE_PATH        {{enroot_top_path_checked}}/enroot_cache'
      backup: yes

  - name: update ENROOT_TEMP_PATH
    lineinfile:
      dest: /etc/enroot/enroot.conf
      state: present
      regexp: '^#ENROOT_TEMP_PATH.*'
      line: 'ENROOT_TEMP_PATH        {{enroot_top_path_checked}}/enroot_tmp'
      backup: yes

  - name: update ENROOT_SQUASH_OPTIONS
    lineinfile: 
      dest: /etc/enroot/enroot.conf
      state: present
      regexp: '^#ENROOT_SQUASH_OPTIONS.*'
      line: 'ENROOT_SQUASH_OPTIONS        -b 262144'
      backup: yes

  - name: update ENROOT_ROOTFS_WRITABLE
    lineinfile: 
      dest: /etc/enroot/enroot.conf
      state: present
      regexp: '^#ENROOT_ROOTFS_WRITABLE.*'
      line: 'ENROOT_ROOTFS_WRITABLE        yes'
      backup: yes

  - name: set permissions on {{enroot_top_path_checked}}
    become: true
    file:
      path: "{{enroot_top_path_checked}}"
      state: directory
      owner: opc
      mode: 0777
      group: "{{privilege_group_name}}"
      recurse: no

  - name: Make sure all {{enroot_top_path_checked}} directories exist
    file:
      path: "{{enroot_top_path_checked}}/{{item}}"
      state: directory
      mode: '0775'
      owner: opc
      group: "{{privilege_group_name}}"
      recurse: no
    with_items: 
      - enroot_data
      - enroot_tmp
      - enroot_cache
      - enroot_runtime

