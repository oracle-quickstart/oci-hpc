{% set bastion = hostvars[groups['bastion'][0]]['ansible_fqdn'].split('.') %}

SlurmctldHost={{ bastion[0] }}
MpiDefault=none
ProctrackType=proctrack/cgroup
ReturnToService=1
SlurmctldPidFile=/var/run/slurmctld.pid
SlurmctldPort=6817
SlurmdPidFile=/var/run/slurmd.pid
SlurmdPort=6818
SlurmdSpoolDir=/var/spool/slurmd
SlurmUser=slurm
StateSaveLocation={{ cluster_nfs_path }}/spool/slurm
SwitchType=switch/none
TaskPlugin=task/affinity
InactiveLimit=0
KillWait=30
MinJobAge=300
SlurmctldTimeout=120
SlurmdTimeout=300
Waittime=0
SchedulerType=sched/backfill
SelectType=select/cons_tres
SelectTypeParameters=CR_Core
AccountingStorageHost={{ bastion[0] }}
AccountingStorageType=accounting_storage/slurmdbd
AccountingStoreJobComment=YES
ClusterName=cluster
JobAcctGatherFrequency=30
JobAcctGatherType=jobacct_gather/linux
SlurmctldDebug=info
SlurmdDebug=info
PropagateResourceLimitsExcept=MEMLOCK
{% if autoscaling | bool %}
CommunicationParameters=NoAddrCache
TopologyPlugin=topology/tree
NodeName=cluster-[1-10]-node-[1-20] Sockets=2 CoresPerSocket=18 ThreadsPerCore=2 State=UNKNOWN
{% else %}
{% for item in groups['compute'] %}
{% set short_name = hostvars[item]['ansible_fqdn'].split('.') %}
NodeName={{ short_name[0] }} Sockets=2 CoresPerSocket=18 ThreadsPerCore=2 State=UNKNOWN
{% endfor %}
{% endif %}
PartitionName=queue Nodes=ALL Default=YES MaxTime=INFINITE State=UP
