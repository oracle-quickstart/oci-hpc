---
- name: Repository
  become: true
  yum_repository:
    name: oci-hpc
    description: oci-hpc
    baseurl: https://objectstorage.us-ashburn-1.oraclecloud.com/n/hpc/b/rpms/o/
    gpgcheck: no
    enabled: yes
    
- name: install SLURM compute packages
  become: true
  yum: 
    name: 
      - slurm-pam_slurm
      - slurm-libpmi
      - slurm-slurmd
- name: Create systemd unit dirs
  become: true
  file:
    name: '/etc/systemd/system/{{ item }}.service.d'
    state: directory
  with_items:
    - munge

- name: Create munge dir
  become: true
  file:
    name: '{{ munge_conf_path }}'
    state: directory
    owner: munge
    group: munge
    mode: 0700

- name: copy munge.key to tmp
  become: true
  shell:
    cmd: cp /etc/munge/munge.key /tmp/munge.key
    warn: false
  delegate_to: 127.0.0.1
  run_once: true

- name: set permissions
  become: true
  shell:
    cmd: chown opc:opc /tmp/munge.key
    warn: false
  delegate_to: 127.0.0.1
  run_once: true

- name: Copy munge key
  become: true
  copy:
    src: /tmp/munge.key
    dest: /etc/munge/munge.key
    owner: munge
    group: munge
    mode: '0400'
  notify: restart munge

- name: restart munge
  become: true
  service:
    name: munge
    state: restarted
    enabled: true

- name: Create {{ slurm_spool_path }}
  become: true
  file:
    name: "{{ slurm_spool_path }}"
    state: directory
    owner: 'slurm'
    group: 'slurm'
    mode: '0750'

- name: Copy configuration files
  become: true
  copy: 
    src: '{{ item }}'
    dest: '{{ slurm_conf_path }}/{{ item }}'
    force: no
    owner: slurm
    group: slurm
  with_items: 
    - cgroup.conf

- name: Generate slurm.conf
  become: true
  template: 
    src: slurm.conf.j2
    dest: /etc/slurm/slurm.conf
    mode: '0644'
    backup: yes
  notify: restart slurm
 
- name: Update feature on compute node
  become: true
  command: scontrol update nodename={{ ansible_hostname }} ActiveFeatures=cluster-size-{{ groups['compute'] | length }},{{ shape }}
  when: autoscaling | bool
  register: result
  retries: 5
  delay: 5
  until: result is not failed

- name: Update node state on bastion
  become: true
  command: scontrol update nodename={{ ansible_hostname }} state=RESUME
  when: autoscaling | bool
  register: result
  retries: 5
  delay: 5
  until: result is not failed