---
- name: create munge group
  become: true
  group:
    name: munge
    gid: "{{ munge_gid }}"
    state: present
    system: yes
- name: create munge user
  become: true
  user:
    name: munge
    comment: "munge"
    uid: "{{ munge_uid }}"
    group: "{{ munge_gid }}"
    shell: /sbin/nologin
    home: /var/lib/munge
    state: present
- name: create slurm group
  become: true
  group:
    name: slurm
    gid: "{{ slurm_gid }}"
    state: present
    system: yes
- name: create slurm user
  become: true
  user:
    name: slurm
    comment: "Slurm user"
    uid: "{{ slurm_uid }}"
    group: "{{ slurm_gid }}"
    shell: /bin/bash
    home: /var/lib/slurm
    state: present

- name: install munge
  vars:
    package_name: '{{ munge_packages }}'
    package_repo: "{{ slurm_repos }}"
  include_role:
    name: safe_yum

- name: Create Slurm RPM directory
  become: true
  file:
    path: "{{ download_path }}/slurm_rpms"
    state: directory
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
  when: download_path == '/tmp'

- name: Create Slurm RPM directory
  become: true
  file:
    path: "{{ download_path }}/slurm_rpms"
    state: directory
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
  delegate_to: 127.0.0.1
  run_once: true
  when: download_path != '/tmp'

- name: Download Slurm DEB
  block:
    - name: Download in shared location
      block: 
      - name: Check if the deb file exists 
        stat: 
          path: "{{ download_path }}/slurm_rpms/slurm-{{slurm_version}}_{{ansible_distribution_version}}_amd64.deb"
        register: slurm_dwld
        delegate_to: 127.0.0.1
        run_once: true
      - name: First try downloading .deb
        get_url:
          url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/lQBJduG5m6xQWauRMPkouaOoliEHbbDIqgfQXou050XAcDav2UveFlRjvFv-0JIn/n/hpc_limited_availability/b/source/o/slurm/slurm-{{slurm_version}}_{{ansible_distribution_version}}_amd64.deb"
          dest: "{{ download_path }}/slurm_rpms"
        when: ( not slurm_dwld.stat.exists )
        delegate_to: 127.0.0.1
        run_once: true  
      when: download_path != '/tmp'

    - name: Download on each node
      block:  
      - name: Check if the deb file exists in /tmp
        stat: 
          path: "{{ download_path }}/slurm_rpms/slurm-{{slurm_version}}_{{ansible_distribution_version}}_amd64.deb"
        register: slurm_dwld
      - name: First try downloading .deb in /tmp
        get_url:
          url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/lQBJduG5m6xQWauRMPkouaOoliEHbbDIqgfQXou050XAcDav2UveFlRjvFv-0JIn/n/hpc_limited_availability/b/source/o/slurm/slurm-{{slurm_version}}_{{ansible_distribution_version}}_amd64.deb"
          dest: "{{ download_path }}/slurm_rpms"
        when: ( not slurm_dwld.stat.exists )
      when: download_path == '/tmp'
  rescue:
    - name: Second try downloading .deb
      get_url:
        url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/VnkLhYXOSNVilVa9d24Riz1fz4Ul-KTXeK4HCKoyqv0ghW3gry3Xz8CZqloqphLw/n/hpc/b/source/o/slurm/slurm-{{slurm_version}}_{{ansible_distribution_version}}_amd64.deb"
        dest: "{{ download_path }}/slurm_rpms"
      when: download_path != '/tmp'
      delegate_to: 127.0.0.1
      run_once: true 
    - name: Second try downloading .deb in /tmp
      get_url:
        url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/VnkLhYXOSNVilVa9d24Riz1fz4Ul-KTXeK4HCKoyqv0ghW3gry3Xz8CZqloqphLw/n/hpc/b/source/o/slurm/slurm-{{slurm_version}}_{{ansible_distribution_version}}_amd64.deb"
        dest: "{{ download_path }}/slurm_rpms"
      when: download_path == '/tmp'
  when: ansible_os_family == 'Debian'

- name: Download Slurm RPMs
  block:
    - name: Download on each node
      block: 
      - name: Check if the RPMs exist in tmp
        stat: 
          path: "{{ download_path }}/slurm_rpms/{{item}}"
        register: slurm_dwld_tmp
        with_items: "{{slurm_all_packages}}"
      - name: First try downloading RPMs in tmp
        get_url:
          url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/lQBJduG5m6xQWauRMPkouaOoliEHbbDIqgfQXou050XAcDav2UveFlRjvFv-0JIn/n/hpc_limited_availability/b/source/o/slurm/{{ item.item }}"        
          dest: "{{ download_path }}/slurm_rpms"
        when: ( not item.stat.exists )
        with_items: "{{slurm_dwld_tmp.results}}"
      when: download_path == '/tmp'

    - name: Download in shared location
      block:   
      - name: Check if the RPMs exist
        stat: 
          path: "{{ download_path }}/slurm_rpms/{{item}}"
        register: slurm_dwld
        delegate_to: 127.0.0.1
        run_once: true
        with_items: "{{slurm_all_packages}}"
      - name: First try downloading RPMs
        get_url:
          url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/lQBJduG5m6xQWauRMPkouaOoliEHbbDIqgfQXou050XAcDav2UveFlRjvFv-0JIn/n/hpc_limited_availability/b/source/o/slurm/{{ item.item }}"        
          dest: "{{ download_path }}/slurm_rpms"
        when: ( not item.stat.exists )
        delegate_to: 127.0.0.1
        run_once: true  
        with_items: "{{slurm_dwld.results}}"
      when: download_path != '/tmp'

  rescue:
    - name: Second try downloading RPMs
      get_url:
        url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/VnkLhYXOSNVilVa9d24Riz1fz4Ul-KTXeK4HCKoyqv0ghW3gry3Xz8CZqloqphLw/n/hpc/b/source/o/slurm/slurm-{{slurm_version}}_{{ansible_distribution_version}}_amd64.deb"
        dest: "{{ download_path }}/slurm_rpms"
      when: download_path != '/tmp'
      delegate_to: 127.0.0.1
      run_once: true
      with_items: "{{slurm_all_packages}}"
    - name: Second try downloading RPMs in tmp
      get_url:
        url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/VnkLhYXOSNVilVa9d24Riz1fz4Ul-KTXeK4HCKoyqv0ghW3gry3Xz8CZqloqphLw/n/hpc/b/source/o/slurm/slurm-{{slurm_version}}_{{ansible_distribution_version}}_amd64.deb"
        dest: "{{ download_path }}/slurm_rpms"
      when: download_path == '/tmp'
      with_items: "{{slurm_all_packages}}"
  when: ansible_os_family == 'RedHat'

- name: Install .deb
  vars:
    deb_name:
      - "{{ download_path }}/slurm_rpms/slurm-{{slurm_version}}_{{ansible_distribution_version}}_amd64.deb"
    package_state: present
  include_role:
    name: safe_yum
  when: ansible_os_family == 'Debian'

- name: install SLURM common packages RedHat
  vars:
    package_name: '{{ slurm_common_packages }}'
    package_repo: "{{slurm_repos}}"
    disable_gpg_check_var: True
  include_role:
    name: safe_yum
  when: ansible_os_family == 'RedHat'

- name: Add Environment variable file for SLurm
  become: true
  template:
    src: 'systemd/slurm_env.j2'
    dest: '/etc/default/slurm'
    backup: "yes"
  when: ansible_os_family == 'Debian'

- name: Create {{ slurm_spool_path }}
  become: true
  file:
    name: "{{ slurm_spool_path }}"
    state: directory
    owner: 'slurm'
    group: 'slurm'
    mode: '0755'

- name: Create /run/slurm/
  become: true
  file:
    name: /run/slurm/
    state: directory
    owner: 'slurm'
    group: 'slurm'
    mode: '0755'

- name: Create munge dir
  become: true
  file:
    name: '{{ munge_conf_path }}'
    state: directory
    owner: munge
    group: munge
    mode: 0700
    
- name: Ensure {{ slurm_log_path }} exists
  become: true
  file:
    path: '{{ slurm_log_path }}'
    owner: slurm
    group: slurm
    mode: 0750
    state: directory

- name: Ensure {{ slurm_conf_path }} exists
  become: true
  file:
    path: '{{ slurm_conf_path }}'
    state: directory

- name: Ensure {{ munge_run_path }} has the correct permissions
  become: true
  file:
    path: '{{ munge_run_path }}'
    owner: munge
    group: munge
    mode: 0755
    state: directory

- name: Ensure {{ munge_log_path }} has the correct permissions
  become: true
  file:
    path: '{{ munge_log_path }}'
    owner: munge
    group: munge
    mode: 0755
    state: directory

- name: Ensure {{ slurm_conf_path }} has the correct permissions
  become: true
  file:
    path: '{{ slurm_conf_path }}'
    owner: slurm
    group: slurm
    mode: 0755
    state: directory

- name: Include pyxis prolog files
  include_tasks: common_pyxis.yml
  when: pyxis|bool

- name: Include pmix prolog files
  include_tasks: common_pmix.yml
  when: ansible_os_family == 'RedHat'

- name: Ensure prolog directory exists
  become: true
  file:
    path: "{{ slurm_conf_path }}/prolog.d"
    state: directory
    owner: root
    group: root
  when: healthchecks|bool

- name: copy healthchecks
  become: true
  copy: 
    src: healthchecks.sh
    dest: "{{ slurm_conf_path }}/prolog.d/healthchecks.sh"
    owner: root
    group: root
    mode: '0755'
  when: healthchecks|bool