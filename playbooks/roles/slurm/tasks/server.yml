---
- name: Generate password for DB user and save it to /etc/trinity/passwords
  set_fact:
    tmp_pwd: '{{ lookup("password",
                           "/etc/opt/oci-hpc/passwords/mysql/slurmdbd.txt
                            chars=ascii_letters,digits,hexdigits") }}'

- name: Get password for DB user from /etc/trinity/passwords)
  set_fact:
    slurmdbd_sql_pwd: '{{ lookup("password",
                           "/etc/opt/oci-hpc/passwords/mysql/slurmdbd.txt
                            chars=ascii_letters,digits,hexdigits") }}'

- name: Install PyMSQL
  become: true
  yum:
    name: 
      - python2-PyMySQL
    state: installed

- name: install SLURM server packages
  become: true
  yum: 
    name: 
      - slurm-slurmctld
      - slurm-slurmdbd
      - slurm-slurmrestd


- name: Create systemd unit dirs
  become: true
  file:
    name: '/etc/systemd/system/{{ item }}.service.d'
    state: directory
  with_items:
    - munge
    - slurmdbd
    - slurmctld


- name: Render systemd units for slurm, slurmdbd and munge
  become: true
  template:
    src: 'systemd/{{ item }}.service.d/unit.conf.j2'
    dest: '/etc/systemd/system/{{ item }}.service.d/unit.conf'
    backup: "yes"
  with_items:
    - munge
    - slurmdbd
    - slurmctld

- block:

    - name: Create {{ cluster_nfs_path }}/spool/slurm
      become: true
      file:
        name: "{{ cluster_nfs_path }}/spool/slurm"
        state: directory
        owner: 'slurm'
        group: 'slurm'
        mode: '0750'
        recurse: yes

    - name: Create {{ slurm_spool_path }}
      become: true
      file:
        name: "{{ slurm_spool_path }}"
        state: directory
        owner: 'slurm'
        group: 'slurm'
        mode: '0750'


    - name: Create shared munge dir
      become: true
      file:
        name: '{{ munge_conf_path }}'
        state: directory
        owner: munge
        group: munge
        mode: 0700

    - name: Create munge.key
      become: true
      command: 'dd if=/dev/urandom bs=1 count=1024 of={{ munge_conf_path }}/munge.key'
      args:
        creates: '{{ munge_conf_path }}/munge.key'

    - name: Set munge.key permissions
      become: true
      file:
        name: '{{ munge_conf_path }}/munge.key'
        state: file
        owner: munge
        group: munge
        mode: 0400
      notify: restart munge


- name: Ensure {{ slurm_log_path }} exists
  become: true
  file:
    path: '{{ slurm_log_path }}'
    owner: slurm
    group: slurm
    mode: 0750
    state: directory

- name: Ensure {{ slurm_conf_path }} exists
  become: true
  file:
    path: '{{ slurm_conf_path }}'
    state: directory

- name: Ensure {{ munge_run_path }} has the correct permissions
  become: true
  file:
    path: '{{ munge_run_path }}'
    owner: munge
    group: munge
    mode: 0755
    state: directory

- name: Ensure {{ munge_log_path }} has the correct permissions
  become: true
  file:
    path: '{{ munge_log_path }}'
    owner: munge
    group: munge
    mode: 0755
    state: directory

- name: Ensure {{ slurm_conf_path }} has the correct permissions
  become: true
  file:
    path: '{{ slurm_conf_path }}'
    owner: slurm
    group: slurm
    mode: 0755
    state: directory

- name: Generate slurm.conf
  become: true
  template: 
    src: slurm.conf.j2
    dest: /etc/slurm/slurm.conf
    mode: '0644'
    backup: yes
    
- name: Create DB for accounting
  become: true
  mysql_db:
      config_file: '/root/.my.cnf'
      name: '{{ slurm_db_name }}'
      state: present

- name: Create DB user for accounting
  become: true
  mysql_user:
      config_file: '/root/.my.cnf'
      name: '{{ slurm_db_user }}'
      password: '{{ slurmdbd_sql_pwd }}'
      priv: '{{ slurm_db_name }}.*:ALL'
      state: present

- name: Generate slurmdbd.conf
  become: true
  template: 
    src: slurmdbd.conf.j2
    dest: /etc/slurm/slurmdbd.conf
    mode: '0640'
    backup: yes
