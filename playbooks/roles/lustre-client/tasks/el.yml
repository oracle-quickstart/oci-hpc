---
- name: Create directory for downloading and untarring Lustre client DKMS package
  file:
    path: "{{ download_path }}/OL8-Lustre-client-dkms"
    state: directory
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
  when: download_path == '/tmp'

- name: Create directory for downloading and untarring Lustre client DKMS package
  file:
    path: "{{ download_path }}/OL8-Lustre-client-dkms"
    state: directory
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
  delegate_to: 127.0.0.1
  run_once: true
  when: download_path != '/tmp'

- name: Download OL8 Lustre client DKMS file
  block:
    - name: Download in shared location
      block:
        - name: Check if the file exists
          stat:
            path: "{{ download_path }}/OL8-Lustre-client-dkms/OL8-Lustre-client-dkms.tgz"
          register: lfs_dwld
          delegate_to: 127.0.0.1
          run_once: true
        - name: First try downloading .tgz file
          get_url:
            url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/YgdAE95IZFWvt39VffXXn9O8ir6JwAnqSSZCP5sAGf5UEqLS2gasO8NychBhNXUv/n/fsssolutions/b/rclone-1/o/OL8-Lustre-client-dkms.tgz"
            dest: "{{ download_path }}/OL8-Lustre-client-dkms"
          when: ( not lfs_dwld.stat.exists )
          delegate_to: 127.0.0.1
          run_once: true
      when: download_path != '/tmp'

    - name: Download in local location instance on each instance
      block:
        - name: Check if the file exists
          stat:
            path: "{{ download_path }}/OL8-Lustre-client-dkms/OL8-Lustre-client-dkms.tgz"
          register: lfs_dwld
        - name: First try downloading .tgz file
          get_url:
            url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/YgdAE95IZFWvt39VffXXn9O8ir6JwAnqSSZCP5sAGf5UEqLS2gasO8NychBhNXUv/n/fsssolutions/b/rclone-1/o/OL8-Lustre-client-dkms.tgz"
            dest: "{{ download_path }}/OL8-Lustre-client-dkms"
          when: ( not lfs_dwld.stat.exists )
      when: download_path == '/tmp'
  rescue:
    - name: Retry downloading the Lustre .tgz file
      get_url:
        url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/YgdAE95IZFWvt39VffXXn9O8ir6JwAnqSSZCP5sAGf5UEqLS2gasO8NychBhNXUv/n/fsssolutions/b/rclone-1/o/OL8-Lustre-client-dkms.tgz"
        dest: "{{ download_path }}/OL8-Lustre-client-dkms"
      delegate_to: 127.0.01
      run_once: true
      retries: 5
      delay: 10
      when: download_path != '/tmp'
    - name: Retry downloading the Lustre .tgz file
      get_url:
        url: "https://objectstorage.eu-frankfurt-1.oraclecloud.com/p/YgdAE95IZFWvt39VffXXn9O8ir6JwAnqSSZCP5sAGf5UEqLS2gasO8NychBhNXUv/n/fsssolutions/b/rclone-1/o/OL8-Lustre-client-dkms.tgz"
        dest: "{{ download_path }}/OL8-Lustre-client-dkms"
      retries: 5
      delay: 10
      register: result
      until: result is not failed
      when: download_path == '/tmp'

- name: untar Lustre client DKMS file in the shared directory created above
  unarchive:
    src: "{{ download_path }}/OL8-Lustre-client-dkms/OL8-Lustre-client-dkms.tgz"
    dest: "{{ download_path }}/OL8-Lustre-client-dkms"
  delegate_to: 127.0.0.1
  run_once: true
  when: download_path != '/tmp'

- name: untar Lustre client DKMS file in the local directory created above
  unarchive:
    src: "{{ download_path }}/OL8-Lustre-client-dkms/OL8-Lustre-client-dkms.tgz"
    dest: "{{ download_path }}/OL8-Lustre-client-dkms"
  when: download_path == '/tmp'

- name: Ensure ol8_codeready_builder repo is enabled
  shell: dnf config-manager --set-enabled ol8_codeready_builder

- name: Ensure ol8_codeready_builder repo is enabled
  shell: dnf config-manager --enable ol8_developer_EPEL

- name: Install downloaded Lustre client RPMS
  vars:
    package_name: "{{ download_path }}/OL8-Lustre-client-dkms/dkms/{{ item }}"
    package_repo: "ol8_codeready_builder,ol8_developer_EPEL"
    disable_gpg_check_var: true
  with_items: "{{ lfs_client_rpms }}"
  include_role:
    name: safe_yum
  when: ansible_distribution_major_version == '8'

- name: Create and update Lustre configuration file
  copy:
    content: "options lnet networks={{ (lnet_protocol | split('@'))[1] }}({{ ansible_default_ipv4.interface }})\n"
    dest: /etc/modprobe.d/lustre.conf
    force: no

- name: Create Lustre mount directory
  become: true
  file:
    path: "{{ local_path }}"
    state: directory
    owner: opc
    group: "{{ privilege_group_name }}"
    mode: 0777

- name: Update /etc/fstab for mounting Lustre filesystem with user defined options
  lineinfile:
    dest: /etc/fstab
    line:
      "{{ export_host }}{{ lnet_protocol }}:/{{ export_path }} {{ local_path }} lustre {{ options }} 0 0"
  when: options!=""

- name: Update /etc/fstab for  mounting Lustre filesystem with default options
  lineinfile:
    dest: /etc/fstab
    line:
      "{{ export_host }}{{ lnet_protocol }}:/{{ export_path }} {{ local_path }} lustre defaults,_netdev 0 0"
  when: options==""

- name: Mount Lustre as per the details updated above in /etc/fstab
  command: "mount {{ local_path }}"
  register: cmd_result
  failed_when: "cmd_result.rc != 0 and ('is already mounted' not in cmd_result.stderr)"
  changed_when: "cmd_result.rc == 0"

- name: Ensure user and group ownership of the mounted share directory is set correctly
  become: true
  file:
    path: "{{ local_path }}"
    state: directory
    owner: opc
    group: "{{ privilege_group_name }}"
