---

- name: get SwitchLine
  shell: "scontrol show hostname `scontrol show topology {{item}} | grep -v inactive-  | rev | cut -d \"=\" -f 1 | rev`"
  register: current_switch
  run_once: true
  delegate_to: 127.0.0.1
  with_items: "{{unreachable_slurm_nodes}}"

- name: getNodes
  set_fact:
    nodes_on_switch: "{{nodes_on_switch | default({}) | combine({item.item : item.stdout_lines } ) }}"
  with_items: "{{current_switch.results}}"
  run_once: true
  delegate_to: 127.0.0.1
  when: ( item.stdout_lines | length ) > 0

- name: getNodes
  set_fact:
    nodes_on_switch: "{{nodes_on_switch | default({}) | combine({item.item : [] } ) }}"
  with_items: "{{current_switch.results}}"
  run_once: true
  delegate_to: 127.0.0.1
  when: ( item.stdout_lines | length ) == 0

- name: get SwitchNames
  shell: "scontrol show topology {{item}} | grep -v inactive | awk '{print $1}' | cut -d \"=\" -f 2"
  register: current_switchName
  run_once: true
  delegate_to: 127.0.0.1
  with_items: "{{unreachable_slurm_nodes}}"

- name: get Switchname
  set_fact:
    switchnames: "{{switchnames | default({}) | combine({item.item : item.stdout} ) }}"
  with_items: "{{current_switchName.results}}"
  run_once: true
  delegate_to: 127.0.0.1
  when: ( item.stdout_lines | length ) > 0

- name: get Switchname
  set_fact:
    switchnames: "{{switchnames | default({}) | combine({item.item : \"\" }) }}"
  with_items: "{{current_switchName.results}}"
  run_once: true
  delegate_to: 127.0.0.1
  when: ( item.stdout_lines | length ) == 0


- name: remove line from topology
  lineinfile:
    path: "{{ slurm_conf_path }}/topology.conf"
    regexp: "SwitchName={{switchnames[item]}}\\sNodes=.*"
    state: absent
  with_items: "{{unreachable_slurm_nodes}}"
  ignore_unreachable: yes
  when: ( not switchnames[item] is match("inactive-.*") ) and ( ( nodes_on_switch[item] | length ) < 2 ) and ( switchnames[item] | length ) > 1
  run_once: true
  delegate_to: 127.0.0.1

- name: generate nodes_on_switch_condensed
  shell: "scontrol show hostlistsorted {{nodes_on_switch[item] | difference([item]) | join(',')}}"
  register: switch_condensed
  with_items: "{{unreachable_slurm_nodes}}"
  ignore_unreachable: yes
  when: ( not switchnames[item] is match("inactive-.*") ) and ( ( nodes_on_switch[item] | length ) > 1 ) and ( switchnames[item] | length ) > 1
  run_once: true
  delegate_to: 127.0.0.1

- name: get condensed_Nodes
  set_fact:
    nodes_on_switch_condensed: "{{nodes_on_switch_condensed | default({}) | combine({item.item : item.stdout } ) }}"
  with_items: "{{switch_condensed.results}}"
  run_once: true
  delegate_to: 127.0.0.1
  ignore_errors: yes

- name: remove line from topology
  lineinfile:
    path: "{{ slurm_conf_path }}/topology.conf"
    regexp: "SwitchName={{switchnames[item]}}\\sNodes.*"
    line: "SwitchName={{switchnames[item]}} Nodes={{nodes_on_switch_condensed[item]}}"
    state: present
  with_items: "{{unreachable_slurm_nodes}}"
  ignore_errors: yes
  when: ( not switchnames[item] is match("inactive-.*") ) and ( ( nodes_on_switch_condensed[item] | length ) > 1 )
  run_once: true
  delegate_to: 127.0.0.1

- name: change Node Status
  become: true
  command: "scontrol delete nodename={{ item }}"
  ignore_errors: true
  ignore_unreachable: True
  with_items: "{{unreachable_slurm_nodes}}"
  delegate_to: 127.0.0.1
  when: ('controller' in group_names)

- name: move topology.conf on backup servers
  become: true
  copy:
    dest: '{{ slurm_conf_path }}/topology.conf'
    src: '{{ slurm_conf_path }}/topology.conf'
    force: yes
  register: topology_copied
  until: topology_copied is not failed
  retries: 10
  delay: 5
  when: ('slurm_backup' in group_names)

- name: Reconfigure Slurm for topology
  become: true
  command: "scontrol reconfigure"
  delegate_to: 127.0.0.1
  run_once: true