---
- name: "Safe Yum install of latest {{package_name}}"
  block:
    - name: "yum first try {{ package_name}}"
      become: true
      yum:
        enablerepo: "{{package_repo|default('None')}}"
        name: "{{package_name}}"
        state: "{{package_state|default('present')}}"
        update_cache: "{{package_cache | default('false') | bool}}"
        lock_timeout: 180
        disable_gpg_check: "{{ disable_gpg_check_var| default('false') | bool}}"
      when: package_repo|default('None') != 'None'
      async: 200
      poll: 10
      register: yum_sleeper

    - name: Check on an async yum task
      async_status:
        jid: "{{ yum_sleeper.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 30
      delay: 10
      when: package_repo|default('None') != 'None'
      failed_when: job_result.rc is defined and job_result.rc > 0 and not 'could not find job' in job_result.msg

    - name: "yum first try {{package_name}}"
      become: true
      yum:
        name: "{{package_name}}"
        state: "{{package_state|default('present')}}"
        update_cache: "{{package_cache | default('false') | bool}}"
        lock_timeout: 180
        disable_gpg_check: "{{ disable_gpg_check_var| default('false') | bool}}"
      when: package_repo|default('None') == 'None'
      async: 200
      poll: 10
      register: yum_sleeper

    - name: Check on an async yum task
      async_status:
        jid: "{{ yum_sleeper.ansible_job_id }}"
      register: job_result
      until: job_result.finished
      retries: 30
      delay: 10
      when: package_repo|default('None') == 'None'
      failed_when: job_result.rc is defined and job_result.rc > 0 and not 'could not find job' in job_result.msg
  rescue:
    # There seem to be a yum process from the cloud-agent that is randomly hanging and is blocking for other tasks.
    - name: Make sure the yum cloud-agent process is destroyed.
      shell: "ps -ef | grep /v[a]r/lib/oracle-cloud-agent/plugins/unifiedmonitoring/temp-unified-monitoring.rpm | head -n 1 | awk '{print $2}'"
      register: yum_process

    - name: Kill Yum Process
      shell: "sudo kill -9 {{yum_process.stdout}}"
      when: yum_process.stdout != ""
      ignore_errors: True

    - name: "yum 2nd try {{package_name}}"
      become: true
      yum:
        enablerepo: "{{package_repo|default('None')}}"
        name: "{{package_name}}"
        state: "{{package_state | default('present')}}"
        update_cache: "{{package_cache | default('false') | bool}}"
        lock_timeout: 90
        disable_gpg_check: "{{ disable_gpg_check_var| default('false') | bool}}"
      register: packages_output
      retries: 5
      delay: 10
      until: packages_output is not failed
      when: package_repo|default('None') != 'None'

    - name: "yum 2nd try {{package_name}}"
      become: true
      yum:
        name: "{{package_name}}"
        state: "{{package_state | default('present')}}"
        update_cache: "{{package_cache | default('false') | bool}}"
        lock_timeout: 90
      register: packages_output
      retries: 5
      delay: 10
      until: packages_output is not failed
      when: package_repo|default('None') == 'None'