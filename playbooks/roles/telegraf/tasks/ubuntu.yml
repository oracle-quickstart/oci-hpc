---
# - name: Add influxdb repository
#   become: true
#   apt_repository: 
#     name: influxdb
#     description: InfluxDB Repository - Debian
#     baseurl: deb https://repos.influxdata.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
#     enabled: 1
#     gpgcheck: 1
#     gpgkey: https://repos.influxdata.com/influxdb.key

# - name: Add influxdb repository
#   become: true
#   apt_repository: 
#     repo: "deb [arch=amd64 signed-by=https://repos.influxdata.com/influxdb.key] https://repos.influxdata.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
#     state: present

- name: Add InfluxData's key
  become: true
  apt_key:
    state: present
    url: https://repos.influxdata.com/influxdb.key

- name: Manage InfluxData APT repositories
  become: true
  apt_repository:
    repo: deb https://repos.influxdata.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    state: present

- name: Install pip
  vars: 
    package_name: 
      - python3-pip
  include_role: 
    name: safe_yum

- name: install influx pip
  become: true
  vars:
    ansible_python_interpreter: /usr/bin/python3
  pip:
    name: influxdb
    executable: pip3

# - name: Install InfluxDB
#   vars: 
#     package_name: 
#       - influxdb
#     package_state: latest
#   include_role: 
#     name: safe_yum

- name: Create database
  shell: "python3 -c \"import influxdb; influxdb.InfluxDBClient(host='{{ hostvars[groups['bastion'][0]]['ansible_fqdn'] }}', port=8086).create_database('telegraph')\""

#- name: Create database
#  influxdb_database:
#      hostname: "{{ hostvars[groups['bastion'][0]]['ansible_fqdn'] }}"
#      database_name: "telegraf"
#  run_once: true

- name: Install telegraf
  vars: 
    package_name: 
      - telegraf
    package_state: latest
  include_role: 
    name: safe_yum

- name: copy telegraf.conf
  become: true
  copy: 
    src: "{{ item }}"
    dest: /etc/telegraf/{{item}}
    force: yes
    backup: yes
    owner: telegraf
    group: telegraf
    mode: 0744
  with_items: 
    - telegraf.conf

- name: render conf files
  become: true
  template: 
    src: "{{ item }}.j2"
    dest: /etc/telegraf/telegraf.d/{{item}}
    force: yes
    backup: yes
    owner: telegraf
    group: telegraf
    mode: 0744
  with_items: 
    - infiniband.conf
    - influxdb.conf
    - net.conf
    - infiniband_hw_counters.conf
- name: restart telegraf
  become: true
  service:
    name: telegraf
    state: restarted
    enabled: yes

