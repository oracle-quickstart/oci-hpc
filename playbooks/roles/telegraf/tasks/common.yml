---
#- name: Create database
#  shell: "python3 -c \"import influxdb; influxdb.InfluxDBClient(host='{{ hostvars[groups['controller'][0]]['ansible_fqdn'] }}', port=8086).create_database('telegraph')\""
#  when: ('controller' in group_names)
  
#- name: Create database
#  influxdb_database:
#      hostname: "{{ hostvars[groups['controller'][0]]['ansible_fqdn'] }}"
#      database_name: "telegraf"
#  run_once: true
- name: Add influxdb repository
  become: true
  yum_repository: 
    name: influxdb
    description: InfluxDB Repository - RHEL $releasever
    baseurl: https://repos.influxdata.com/rhel/{{ ansible_distribution_major_version }}/$basearch/stable
    enabled: 1
    gpgcheck: 1
    gpgkey: https://repos.influxdata.com/influxdata-archive_compat.key
  when: ansible_os_family == 'RedHat'
  
- name: Add InfluxData's key
  become: true
  apt_key:
    state: present
    url: https://repos.influxdata.com/influxdata-archive_compat.key
  when: ansible_os_family == 'Debian'

- name: Manage InfluxData APT repositories
  become: true
  apt_repository:
    repo: deb https://repos.influxdata.com/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable
    state: present
  when: ansible_os_family == 'Debian'

- name: Install telegraf
  vars: 
    package_name: 
      - telegraf
    package_state: latest
  include_role: 
    name: safe_yum

- name: force telegraf gid 998
  become: true
  lineinfile:
    path: /etc/group
    state: present
    regexp: '^telegraf:x:(.*)$'
    line: 'telegraf:x:998:'
    backrefs: yes

- name: force telegraf uid 998
  become: true
  lineinfile:
    path: /etc/passwd
    state: present
    regexp: '^telegraf:x:(.*)$'
    line: 'telegraf:x:998:998::/etc/telegraf:/bin/false'
    backrefs: yes

- name: Check for nvidia-smi
  shell: nvidia-smi
  register: nvidiasmi
  ignore_errors: yes

- name: Check for rocm-smi
  shell: rocm-smi
  register: rocmsmi
  ignore_errors: yes

- name: copy telegraf.conf
  become: true
  copy:
    src: "{% if nvidiasmi is failed %}{% if rocmsmi is failed %}telegraf.conf{% else%}telegraf_amd_gpu.conf{% endif %}{% else%}telegraf_nvidia_gpu.conf{% endif %}"
    dest: /etc/telegraf/telegraf.conf
    force: yes
    backup: yes
    owner: telegraf
    group: telegraf
    mode: 0744

- name: render conf files
  become: true
  template: 
    src: "{{ item }}.j2"
    dest: /etc/telegraf/telegraf.d/{{item}}
    force: yes
    backup: yes
    owner: telegraf
    group: telegraf
    mode: 0744
  with_items: 
    - infiniband.conf
    - prometheus.conf
    - net.conf
    - ethtool_counters.conf
    - infiniband_mlx5_0_hw_counters.conf
    - infiniband_mlx5_1_hw_counters.conf
    - infiniband_mlx5_2_hw_counters.conf
    - infiniband_mlx5_3_hw_counters.conf
    - infiniband_mlx5_4_hw_counters.conf
    - infiniband_mlx5_5_hw_counters.conf
    - infiniband_mlx5_6_hw_counters.conf
    - infiniband_mlx5_7_hw_counters.conf
    - infiniband_mlx5_8_hw_counters.conf
    - infiniband_mlx5_9_hw_counters.conf
    - infiniband_mlx5_10_hw_counters.conf
    - infiniband_mlx5_11_hw_counters.conf
    - infiniband_mlx5_12_hw_counters.conf
    - infiniband_mlx5_13_hw_counters.conf
    - infiniband_mlx5_14_hw_counters.conf
    - infiniband_mlx5_15_hw_counters.conf
    - infiniband_mlx5_16_hw_counters.conf

- name: render conf files
  become: true
  template: 
    src: "{{ item }}.j2"
    dest: /etc/telegraf/telegraf.d/{{item}}
    force: yes
    backup: yes
    owner: telegraf
    group: telegraf
    mode: 0744
  with_items: 
    - nvidia_gpu.conf
  when: not nvidiasmi is failed

- name: render conf files
  become: true
  template: 
    src: "{{ item }}.j2"
    dest: /etc/telegraf/telegraf.d/{{item}}
    force: yes
    backup: yes
    owner: telegraf
    group: telegraf
    mode: 0744
  with_items: 
    - amd_gpu.conf
  when: not rocmsmi is failed

- name: restart telegraf
  become: true
  service:
    name: telegraf
    state: restarted
    enabled: yes

