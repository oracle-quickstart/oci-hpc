# tasks/hosts.yml
- hosts: all 
  become: true
  tasks: 
  - name: stop firewalld
    service: 
      name: firewalld
      state: stopped
      enabled: no
  - name: update global known_hosts file
    become: true
    blockinfile:
      create: true
      backup: true
      dest: /etc/ssh/ssh_known_hosts
      content: "{{ lookup('template', '_known_hosts.j2') }}"
      state: present

  - name: update /etc/hosts file
    become: true
    blockinfile:
      dest: /etc/hosts
      content: "{{ lookup('template', '_hosts.j2') }}"
      state: present
  - name: place the private SSH key on every node
    become: true
    copy: 
      src: /home/opc/.ssh/id_rsa
      dest: /home/opc/.ssh/id_rsa
      owner: opc
      group: opc
      mode: 0600
  - name: create nfs-share directory
    become: true
    file:
      path: /mnt/nfs-share
      state: directory
      owner: opc
      group: opc
  - name: Create /etc/opt/oci-hpc/ directory if it does not exist
    file:
      path: /etc/opt/oci-hpc
      state: directory
      mode: '0755'
  - name: create hostfile
    template: 
      src: _hostfile_rdma.j2
      dest: /etc/opt/oci-hpc/hostfile.rdma
  - name: create hostfile
    template: 
      src: _hostfile_tcp.j2
      dest: /etc/opt/oci-hpc/hostfile.tcp
  - name: Add host to group nfs
    add_host:
      name: "{{ groups['compute'][0] }}"
      groups: nfs

- hosts: compute
  gather_facts: True
  become: true
  handlers:
  - name: restart_interface
    command: bash -c "ifdown enp94s0f0 && ifup enp94s0f0"
    when: rdma_interface.changed
  tasks: 
  - name: Create a symbolic link
    file:
      src: /etc/opt/oci-hpc/hostfile.rdma
      dest: /etc/opt/oci-hpc/hostfile
      owner: root
      group: root
      state: link
      mode: 0644
  - name: create interface files
    register: rdma_interface
    notify: restart_interface
    template: 
      src: _ifcfg.j2
      dest: /etc/sysconfig/network-scripts/ifcfg-enp94s0f0
  - name: Create a new primary partition
    parted:
      device: /dev/nvme0n1
      number: 1
      state: present
      label: gpt
  - name: create a filesystem
    filesystem: 
      dev: /dev/nvme0n1p1
      fstype: xfs
  - name: Mount local volume
    mount:
      path: /mnt/localdisk/
      src: /dev/nvme0n1p1
      fstype: xfs
      opts: defaults,noatime
      state: mounted
  - name: Update LOCAL_VOLUME_PATH
    lineinfile:
      path: /etc/opt/oci-hpc/bashrc/.bashrc_config
      regexp: '^export LOCAL_VOLUME_PATH'
      line: 'export LOCAL_VOLUME_PATH="/mnt/localdisk"'
  - name: Update NFS_CONFIGURED
    lineinfile:
      path: /etc/opt/oci-hpc/bashrc/.bashrc_config
      regexp: '^export NFS_CONFIGURED'
      line: 'export NFS_CONFIGURED="yes"'
  - name: Update NFS_EXPORT_PATH
    lineinfile:
      path: /etc/opt/oci-hpc/bashrc/.bashrc_config
      regexp: '^export NFS_EXPORT_PATH'
      line: 'export NFS_EXPORT_PATH="/mnt/localdisk/nfs-share"'
  - name: Update NFS_MOUNT_PATH
    lineinfile:
      path: /etc/opt/oci-hpc/bashrc/.bashrc_config
      regexp: '^export NFS_MOUNT_PATH'
      line: 'export NFS_MOUNT_PATH="/mnt/nfs-share"'

- hosts: nfs 
  become: true
  tasks: 
  - name: create nfs-share export directory
    become: true
    file:
      path: /mnt/localdisk/nfs-share
      state: directory
  - name: create exports file
    register: nfs_config
    notify: restart_nfs
    template: 
      src: _exports.j2
      dest: /etc/exports.d/hpc_nfs_share.exports
  handlers:
  - name: restart_nfs
    command: bash -c "systemctl restart nfs-server"
    when: nfs_config.changed
  
- hosts: all
  become: true
  tasks: 
  - name: Mount NFS
    mount:
      path: /mnt/nfs-share/
      src: "{{  hostvars[groups['nfs'][0]]['ansible_default_ipv4']['address'] }}:/mnt/localdisk/nfs-share"
      fstype: nfs
      opts: defaults,noatime,bg,timeo=100,ac,actimeo=120,nocto,rsize=1048576,wsize=1048576,nolock,local_lock=none,mountproto=tcp,sec=sys,_netdev
      state: mounted
  - name: set nfs-share permissions
    become: true
    file:
      path: /mnt/nfs-share
      state: directory
      owner: opc
      group: opc

- hosts: compute
  tasks:
  - name: Intel RPM key
    become: true
    rpm_key:
      state: "{% if intel_mpi is sameas true %}present{% else %}absent{% endif %}"
      key: https://yum.repos.intel.com/intel-gpg-keys/GPG-PUB-KEY-INTEL-SW-PRODUCTS-2019.PUB
  - name: Add Intel repository
    become: true
    yum_repository:
      state: "{% if intel_mpi is sameas true %}present{% else %}absent{% endif %}"
      name: intel-mpi-repo
      description: Intel(R) MPI Library
      baseurl: https://yum.repos.intel.com/mpi
      gpgkey: https://yum.repos.intel.com/mpi/setup/PUBLIC_KEY.PUB
  - name: intel MPI
    become: true
    package:
      state: "{% if intel_mpi is sameas true %}present{% else %}absent{% endif %}"
      name: intel-mpi
    when: ( intel_mpi | default(false) )
